// <auto-generated />
using System;
using GamesBoxd_api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GamesBoxd_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250918233505_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("GameListId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("HasSpoiler")
                        .HasColumnType("boolean")
                        .HasColumnName("has_spoiler");

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("likes");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("GameListId");

                    b.HasIndex("ReviewId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("idx_developer_name");

                    b.ToTable("developer", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<float>("AverageRating")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("average_rating");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar")
                        .HasColumnName("bio");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("uuid")
                        .HasColumnName("developer_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uuid")
                        .HasColumnName("publisher_id");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamptz")
                        .HasColumnName("release_date");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("PublisherId");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.GameList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("likes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("game_list", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("idx_genre_name");

                    b.ToTable("genre", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("idx_platform_name");

                    b.ToTable("platform", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("idx_publisher_name");

                    b.ToTable("publisher", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("likes");

                    b.Property<Guid?>("MainCommentId")
                        .HasColumnType("uuid");

                    b.Property<float>("Rating")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("rating");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("MainCommentId");

                    b.HasIndex("UserId");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Bio")
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("bio");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar")
                        .HasColumnName("image");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar")
                        .HasColumnName("password_hash");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ux_users_email");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ux_users_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.UserFollow", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FolloweeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamptz")
                        .HasColumnName("date");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_blocked");

                    b.HasKey("FollowerId", "FolloweeId");

                    b.HasIndex("FolloweeId");

                    b.HasIndex("FollowerId", "FolloweeId")
                        .IsUnique();

                    b.ToTable("users_follows", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.UserGame", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("user_games", (string)null);
                });

            modelBuilder.Entity("game_genre", b =>
                {
                    b.Property<Guid>("game_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("genre_id")
                        .HasColumnType("uuid");

                    b.HasKey("game_id", "genre_id")
                        .HasName("pk_game_genre");

                    b.HasIndex("game_id");

                    b.HasIndex("genre_id");

                    b.ToTable("game_genre", (string)null);
                });

            modelBuilder.Entity("game_platform", b =>
                {
                    b.Property<Guid>("game_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("platform_id")
                        .HasColumnType("uuid");

                    b.HasKey("game_id", "platform_id");

                    b.HasIndex("game_id");

                    b.HasIndex("platform_id");

                    b.ToTable("game_platform", (string)null);
                });

            modelBuilder.Entity("gamelist_game", b =>
                {
                    b.Property<Guid>("gamelist_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("game_id")
                        .HasColumnType("uuid");

                    b.HasKey("gamelist_id", "game_id")
                        .HasName("pk_gamelist_game");

                    b.HasIndex("game_id");

                    b.HasIndex("gamelist_id");

                    b.ToTable("gamelist_game", (string)null);
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Comment", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.GameList", "GameList")
                        .WithMany("Comments")
                        .HasForeignKey("GameListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_comments_gamelist_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.Review", "Review")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comment_review_id");

                    b.Navigation("GameList");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Game", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_games_developer_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_games_publisher_id");

                    b.Navigation("Developer");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.GameList", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.User", "User")
                        .WithMany("Lists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gamelist_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Review", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_game_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.Comment", "MainComment")
                        .WithMany()
                        .HasForeignKey("MainCommentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_reviews_main_comment_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_user_id");

                    b.Navigation("Game");

                    b.Navigation("MainComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.UserFollow", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.User", "Followee")
                        .WithMany("Followers")
                        .HasForeignKey("FolloweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userfollows_followee_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.User", "Follower")
                        .WithMany("Following")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userfollows_follower_id");

                    b.Navigation("Followee");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.UserGame", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Game", "Game")
                        .WithMany("UserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usergames_game_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.User", "User")
                        .WithMany("UserGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usergames_user_id");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("game_genre", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("game_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_genre_game_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("genre_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_genre_genre_id");
                });

            modelBuilder.Entity("game_platform", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("game_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_platform_game_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.Platform", null)
                        .WithMany()
                        .HasForeignKey("platform_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_platform_platform_id");
                });

            modelBuilder.Entity("gamelist_game", b =>
                {
                    b.HasOne("GamesBoxd_api.Domain.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("game_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gamelist_game_game_id");

                    b.HasOne("GamesBoxd_api.Domain.Entities.GameList", null)
                        .WithMany()
                        .HasForeignKey("gamelist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gamelist_game_gamelist_id");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Developer", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Game", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("UserGames");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.GameList", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.Review", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GamesBoxd_api.Domain.Entities.User", b =>
                {
                    b.Navigation("Followers");

                    b.Navigation("Following");

                    b.Navigation("Lists");

                    b.Navigation("Reviews");

                    b.Navigation("UserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
